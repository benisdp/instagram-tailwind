{{ 'image.css' | asset_url | stylesheet_tag }}
{{ 'styles.css' | asset_url | stylesheet_tag }}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glidejs/glide/dist/css/glide.core.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glidejs/glide/dist/css/glide.theme.min.css">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

<div>
  {% comment %} <h1>Header Example</h1> {% endcomment %}
  <div class="glide" id="lslider">
      <div class="glide__track" data-glide-el="track">
              <ul class="glide__slides">
              </ul>
      </div>
      <div class="glide__arrows" data-glide-el="controls">
        <button class="glide__arrow glide__arrow--left" data-glide-dir="<">prev</button>
        <button class="glide__arrow glide__arrow--right" data-glide-dir=">">next</button>
      </div>
  </div>

  
  <div class="micromodal micromodal-slide" id="modal-1" aria-hidden="true">
    <div class="modal__overlay" tabindex="-1" data-micromodal-close>
      <div class="modal-dialog modal-xl" role="dialog" aria-modal="true" aria-labelledby="modal-1-title">
        <main class="modal-content" id="modal-1-content">
            <div class="modal-body p-0">
              <div class="container-fluid p-0">
                <div class="row g-0">
                  <div class="col-12 col-md-7 modal__media_container"></div>
                  <div class="col-12 col-md-5 p-3 d-flex flex-column">
                    {% comment %} <div class="modal__details__inner"> {% endcomment %}
                      <h4>
                        <a class="ig_username" target="_blank" href="username">
                          
                        </a>
                      </h4>
                      <hr>
                      <div class="modal__tags"></div>
                      <p class="photo_description"></p>
                      <div class="media__date mb-0 mt-auto"></div>
                    {% comment %} </div> {% endcomment %}
                  </div>
                </div>
              </div>
            </div>
        </main>
      </div>
    </div>
  </div>

</div>

<script src="https://cdn.jsdelivr.net/npm/@glidejs/glide" defer></script>
<script src="https://unpkg.com/micromodal/dist/micromodal.min.js" defer></script>
<script src="https://unpkg.com/dayjs@1.8.21/dayjs.min.js" defer></script>

<script>
  window.addEventListener("load", function() {

    MicroModal.init({awaitCloseAnimation: true});
    const slidesUL = document.querySelector(".glide__slides");

    const displayModalTags = (tags) => {
      if (!tags) return;
      const modalTags = document.querySelector(".modal__tags");
      modalTags.innerHTML = ""; // clear list
      const taggedProducts = tags;
      taggedProducts.forEach((product) => {
        const { id, title, handle } = product; // {}
        const div = document.createElement("div");
        div.innerHTML = `<a class="btn btn-primary m-1" key="${id}"href="/products/${handle}">${title}</a>`;
        modalTags.appendChild(div.firstChild);
      });
    };

    const handleSlideClick = (photo) => {
      const modalImg = document.querySelector(".modal__img");
      const photoDescription = document.querySelector(".photo_description")
      const instagramTimestamp = document.querySelector(".media__date")
      console.log(photo)

      const instagramUsernameH1 = document.querySelector(".ig_username")

      instagramUsernameH1.innerHTML = `<a class="instagram_username" target="_blank" href="https://instagram.com/${photo.username}">@${photo.username}</a>`

      instagramTimestamp.innerHTML = `${dayjs(new Date(photo.instagramTimestamp)).format(
        "MMMM d"
      )} • <a class="instagram_username" target="_blank" href="https://google.com"> View on Instagram </a>`; 

      photoDescription.innerHTML = photo.caption || ""

      let imgHTML = `<img 
        src="${photo.mediaURL}"
        class="modal__img"
        width="100"
        height="100" 
        loading="lazy"/>`;
  
      let videoHTML = `<video 
        src="${photo.mediaURL}"
        autoplay
        controls
        class="modal__img"
        width="100"
        height="100" 
        loading="lazy"/>`;
  
      const modalMediaContainerElement = document.querySelector(
        ".modal__media_container"
      );
      if (photo.mediaType == "IMAGE") {
        modalMediaContainerElement.innerHTML = imgHTML;
      } else if (photo.mediaType == "VIDEO") {
        modalMediaContainerElement.innerHTML = videoHTML;
      } else if (photo.mediaType == "CAROUSEL_ALBUM") {
        modalMediaContainerElement.innerHTML = imgHTML;
      }

      {% comment %} const {photo.photoDescription} = photoDescription {% endcomment %}
      {% comment %} modalImg.src = photo.mediaURL; {% endcomment %}

      displayModalTags(photo.tags);
      MicroModal.show("modal-1");
    };

    async function fetchUserAndDisplayFeed() {
      const resp = await fetch("/apps/ig-feed/api/user/me")
      const jsonResp = await resp.json();
      console.log(jsonResp)
      const { populatedUser } = jsonResp;
      console.log(populatedUser)
  
      const lastSelectedFeed = populatedUser.feeds
        .find(feed => feed._id === populatedUser.lastSelectedFeedID)
      const firstFeed = populatedUser.feeds[0];
      const displayFeed = lastSelectedFeed || firstFeed || {};
      const instagramTimestamp = document.querySelector(".media__date")
      {% comment %} instagramTimestamp.innerHTML += ` •  TEST` {% endcomment %}
      
      const generateHTMLForMedia = (media) => {
        const { mediaType, mediaURL } = media;
        if (mediaType == "IMAGE") {
          return `
            <div class="image_container">
              <img
                class="image"
                style="
                  height:200px;
                  width:100%;
                  object-fit:cover"
                src=${mediaURL}
                alt="gord"
              />
              <div class="middle">
                <img
                  src="https://storage.googleapis.com/dojo_apps/Instagram_Glyph_Gradient_RGB.png"
                  class="ig_logo"
                />
              </div>
            </div>
          `;
        } else if (mediaType == "VIDEO") {
          return `
            <video
              class="selected_photo"
              style="
                  height:200px;
                  width:100%;
                  object-fit:cover
                "
              src=${mediaURL}
              alt="gord"
            />
          `;
        } else if (mediaType == "CAROUSEL_ALBUM") {
          return `
            <div class="image_container">
              <img
                class="image"
                style="
                  height:200px;
                  width:100%;
                  object-fit:cover
                "
                src=${mediaURL}
                alt="gord"
              />
              <div class="middle">
                <img
                  src="https://storage.googleapis.com/dojo_apps/Instagram_Glyph_Gradient_RGB.png"
                  class="ig_logo"
                />
              </div>
            </div>
          `;
        }
      };
      displayFeed?.photos.forEach(photo => {
        console.log(photo.mediaURL);
        const li = document.createElement("li");
        li.innerHTML = generateHTMLForMedia(photo);
        li.querySelector("img,video").onclick = () => handleSlideClick(photo);
        li.classList.add("glide__slide");
        slidesUL.appendChild(li);
      });

      new Glide('.glide', {
        type: "slider",
      startAt: 0,
      perView: 6, // xxl
      bound: true,
      breakpoints: {
        // xl
        1400: { perView: 6 },
        // lg
        1200: { perView: 5 },
        // md
        992: { perView: 4 },
        // sm
        768: { perView: 3 },
        // xs
        576: { perView: 2 },
      },
      }).mount();
    }
  
    fetchUserAndDisplayFeed();
  });
    
</script>
{% schema %}
{
  "name": "Instagram Feed Express",
  "target": "section"
}
{% endschema %}
